x = [5000,6000,7000,8000,9000]; %% size the matrix A, n
% following data y1,y2,y3 represent the execution time of 
% the LU algorithm for n=5000, 6000, ..., 9000, when 0, 2, 4, and 6 threads are used in openmp parallelization, respectively

% Note: every value in each following array is rounded to its first decimal place
% y0 represents the execution time when no thread is used.
y0=[65.1,118.3,201.9,277.8,380.8]; % no threads were used
y1=[22.9,36.6,65.1,86.3,124.5]; % 6 threads were used
y2=[33.5,54.4,93.2,122.1,163.8]; % 4 threads were used
y3=[43.2,74.3,132.7,164.3,215.4]; % 2 threads were used
hold all
for i=1:5
scatter(x(i),y0(i),'X')
scatter(x(i),y1(i),'X')
scatter(x(i),y2(i),'X')
scatter(x(i),y3(i),'X')
line(x(i),y0(i))
line(x(i),y1(i))
line(x(i),y2(i))
line(x(i),y3(i))
end
plot(x,y0,'-x')
plot(x(5),y0(5),'r*')
plot(x,y1,'-x')
plot(x(5),y1(5),'b*')
plot(x,y2,'-x')
plot(x(5),y2(5),'g*')
plot(x,y3,'-x')
plot(x(5),y3(5),'y*')
xlabel('size n')
ylabel('running time t (s)')
